{% set name = "pyFFTW" %}
{% set version = "0.13.1" %}
{% set sha256 = "ffc1b3e7f4f74ee38716d668d7606b5fbfded58343655c160c3644fc4acf5d55" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/{{ name }}/{{ name }}/archive/refs/tags/v{{ version }}.tar.gz
  sha256: {{ sha256 }}
  patches:
    - patches/0001-cython3-updates-and-test-build-linker-flags.patch
    - patches/0002-no-system-include.patch

build:
  number: 0
  # fftw not available for s390x
  skip: true  # [py<38 or py>311 or s390x]

requirements:
  build:
    - {{ compiler('c') }}
    - patch     # [not win]
    - m2-patch  # [win]
  host:
    - cython >=3
    - python
    - pip
    - setuptools
    - wheel
    - numpy
    - fftw
  run:
    - python
    - {{ pin_compatible('numpy') }}

test:
  imports:
    - pyfftw
    - pyfftw.builders
    - pyfftw.interfaces
  requires:
    - pip
    - pytest
    - scipy >=1.2.0
  source_files:
    - tests
  commands:
    - pip check
    - pytest --import-mode=append tests/

about:
  home: https://github.com/pyFFTW/pyFFTW
  license: BSD3 and BSD2 and GPL
  license_file: LICENSE.txt
  license_family: Other
  summary: A pythonic wrapper around FFTW, the FFT library, presenting a unified interface for all the supported transforms.
  description: |
    pyFFTW is a pythonic wrapper around FFTW, the speedy FFT library. The ultimate aim is to present a unified interface for 
    all the possible transforms that FFTW can perform.

    Both the complex DFT and the real DFT are supported, as well as on arbitrary axes of abitrary shaped and strided arrays, 
    which makes it almost feature equivalent to standard and real FFT functions of numpy.fft (indeed, it supports the 
    clongdouble dtype which numpy.fft does not).
  dev_url: https://github.com/pyFFTW/pyFFTW
  doc_url: https://pyfftw.readthedocs.io

extra:
  recipe-maintainers:
    - grlee77
    - hgomersall
    - jakirkham
